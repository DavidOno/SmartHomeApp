apply plugin: 'com.android.application'
apply plugin: 'com.google.gms.google-services'
apply plugin: "androidx.navigation.safeargs"
apply plugin: 'de.mannodermaus.android-junit5'

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.2"

    defaultConfig {
        applicationId "de.smarthome"
        minSdkVersion 24
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false //to enable temp network, change to true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    testOptions {
        unitTests.returnDefaultValues = true //This is needed because Log.d has to be mocked.
        //But this option can severely backfire and result in failed test displayed as passed.
        //Therefore remove Log.d and introduce a framework via DI, so that it can be mocked away
        //when executing tests
        //TODO: Remove all Log.d
        unitTests.all{ //?
            useJUnitPlatform()
        }
    }

    sourceSets{ //?
        test{
            java.srcDirs = ["src/test/java"]
        }
    }

    android {
        useLibrary 'org.apache.http.legacy'
    }

    android.packagingOptions {
        exclude 'META-INF/spring.tooling'
        exclude 'META-INF/spring.handlers'
        exclude 'META-INF/spring-configuration-metadata.json'
        exclude 'META-INF/spring.factories'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/web-fragment.xml'
        exclude 'META-INF/LICENSE.md'
        exclude 'META-INF/NOTICE.md'
        exclude 'META-INF/additional-spring-configuration-metadata.json'
        exclude 'META-INF/spring.schemas'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/INDEX.LIST'
        exclude 'org/springframework/context/config/spring-context.gif'
    }
}



dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'com.google.android.material:material:1.2.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation 'androidx.navigation:navigation-fragment:2.3.4'
    implementation 'androidx.navigation:navigation-ui:2.3.4'
    implementation platform('com.google.firebase:firebase-bom:26.4.0')
    implementation 'com.google.firebase:firebase-messaging:21.0.0'
    implementation 'com.google.firebase:firebase-analytics'

    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
    implementation 'org.springframework.android:spring-android-rest-template:1.0.1.RELEASE'


    implementation 'org.apache.httpcomponents:httpclient-android:4.3.5.1'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.6.0'
    implementation('pl.brightinventions:slf4android:0.0.4@aar') {
        transitive = true
    }

    implementation 'com.google.android.gms:play-services-auth:19.0.0'
    implementation 'org.altbeacon:android-beacon-library:2+'
    implementation 'androidx.localbroadcastmanager:localbroadcastmanager:1.0.0'


    testImplementation "org.junit.jupiter:junit-jupiter-api:5.7.0"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:5.7.0"
    testImplementation "org.junit.jupiter:junit-jupiter-params:5.7.0"
    testImplementation group: 'org.junit.vintage', name: 'junit-vintage-engine', version: '5.8.0-M1'
    testImplementation group: 'org.junit.platform', name: 'junit-platform-launcher', version: '1.8.0-M1'

    implementation group: 'com.squareup.assertj', name: 'assertj-android', version: '1.2.0'
    testCompile group: 'org.mockito', name: 'mockito-core', version: '3.9.0'
    androidTestCompile group: 'org.mockito', name: 'mockito-android', version: '3.9.0'
    implementation group: 'net.bytebuddy', name: 'byte-buddy', version: '1.11.0'
    testImplementation group: 'net.bytebuddy', name: 'byte-buddy-agent', version: '1.11.0'
    testImplementation group: 'org.objenesis', name: 'objenesis', version: '3.2'

    compile 'com.github.skydoves:colorpickerpreference:1.0.2'
}


import org.gradle.api.tasks.testing.logging.TestExceptionFormat
import org.gradle.api.tasks.testing.logging.TestLogEvent

tasks.withType(Test) {
    useJUnitPlatform() //?
    testLogging {
        // set options for log level LIFECYCLE
        events TestLogEvent.FAILED,
                TestLogEvent.PASSED,
                TestLogEvent.SKIPPED,
                TestLogEvent.STANDARD_OUT
        exceptionFormat TestExceptionFormat.FULL
        showExceptions true
        showCauses true
        showStackTraces true

        // set options for log level DEBUG and INFO
        debug {
            //events  TestLogEvent.STARTED, //currently this event is not interesting
            events  TestLogEvent.FAILED,
                    TestLogEvent.PASSED,
                    TestLogEvent.SKIPPED,
                    TestLogEvent.STANDARD_ERROR,
                    TestLogEvent.STANDARD_OUT
            exceptionFormat TestExceptionFormat.FULL
        }
        info.events = debug.events
        info.exceptionFormat = debug.exceptionFormat

        afterSuite { desc, result ->
            if (!desc.parent) { // will match the outermost suite
                def output = "Results: ${result.resultType} (${result.testCount} tests, ${result.successfulTestCount} passed, ${result.failedTestCount} failed, ${result.skippedTestCount} skipped)"
                def startItem = '|  ', endItem = '  |'
                def repeatLength = startItem.length() + output.length() + endItem.length()
                println('\n' + ('-' * repeatLength) + '\n' + startItem + output + endItem + '\n' + ('-' * repeatLength))
            }
        }
    }
}